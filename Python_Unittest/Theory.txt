什么是单元测试？
单元测试是开发者编写的一小段代码，用于检测被测代码的一个很小的、很明确的功能是否正确。通常而言，一个单元测试是用于判断某个特定条件（或者场景）下某个特定函数的行为

单元测试需要注意：
单元测试的时候一个大前提就是需要清楚的知道，自己要测试的程序块所预期的输入和输出，然后根据这个预期和程序逻辑来书写 case 。
这里的预期结果一定要针对需求／设计的逻辑去写，而不是针对程序的实现去写，否则单测就失去了意义，照着错误的实现设 i 十出的 case 也很可能是错的。

代码覆盖率也被用于自动化测试和手工测试来度量测试是否全面的指标之一应用覆盖率的思想增强测试用例的设计
单元测试覆盖类型：
语句覆盖：通过设计一定量的测试用例，保证被测方法的每一行代码都会被执行一遍，运行测试用例的时候被击中的语句即被称为被覆盖的语句。（最基础的覆盖方式，也是最薄弱的）
条件覆盖：条件覆盖与判断覆盖类似，不过判断覆盖关注整个判定语句，而条件覆盖关注某个判断条件
判断覆盖：运行测试用例过程中被击中的判断语句
路径覆盖：覆盖所有可能执行的路径