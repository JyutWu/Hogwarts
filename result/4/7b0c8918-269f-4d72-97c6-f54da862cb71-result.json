{"name": "test_attach_photo", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: 'C:/Users/Administrator/Desktop/test.jpeg'", "trace": "def test_attach_photo():\n>       allure.attach.file('C:/Users/Administrator/Desktop/test.jpeg', name='这是一张图片', attachment_type=allure.attachment_type.JPG)\n\nPython_Attach.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nd:\\python37\\lib\\site-packages\\allure_commons\\_allure.py:167: in file\n    plugin_manager.hook.attach_file(source=source, name=name, attachment_type=attachment_type, extension=extension)\nd:\\python37\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nd:\\python37\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nd:\\python37\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nd:\\python37\\lib\\site-packages\\allure_pytest\\listener.py:219: in attach_file\n    self.allure_logger.attach_file(uuid4(), source, name=name, attachment_type=attachment_type, extension=extension)\nd:\\python37\\lib\\site-packages\\allure_commons\\reporter.py:113: in attach_file\n    plugin_manager.hook.report_attached_file(source=source, file_name=file_name)\nd:\\python37\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nd:\\python37\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nd:\\python37\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nd:\\python37\\lib\\site-packages\\allure_commons\\logger.py:53: in report_attached_file\n    shutil.copy2(source, destination)\nd:\\python37\\lib\\shutil.py:263: in copy2\n    copyfile(src, dst, follow_symlinks=follow_symlinks)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsrc = 'C:/Users/Administrator/Desktop/test.jpeg', dst = 'D:\\\\Hogwarts\\\\result\\\\4\\\\a5ca1253-bb29-4223-8142-348d96e8d8f7-attachment.jpg'\n\n    def copyfile(src, dst, *, follow_symlinks=True):\n        \"\"\"Copy data from src to dst.\n    \n        If follow_symlinks is not set and src is a symbolic link, a new\n        symlink will be created instead of copying the file it points to.\n    \n        \"\"\"\n        if _samefile(src, dst):\n            raise SameFileError(\"{!r} and {!r} are the same file\".format(src, dst))\n    \n        for fn in [src, dst]:\n            try:\n                st = os.stat(fn)\n            except OSError:\n                # File most likely does not exist\n                pass\n            else:\n                # XXX What about other special files? (sockets, devices...)\n                if stat.S_ISFIFO(st.st_mode):\n                    raise SpecialFileError(\"`%s` is a named pipe\" % fn)\n    \n        if not follow_symlinks and os.path.islink(src):\n            os.symlink(os.readlink(src), dst)\n        else:\n>           with open(src, 'rb') as fsrc:\nE           FileNotFoundError: [Errno 2] No such file or directory: 'C:/Users/Administrator/Desktop/test.jpeg'\n\nd:\\python37\\lib\\shutil.py:120: FileNotFoundError"}, "attachments": [{"name": "这是一张图片", "source": "a5ca1253-bb29-4223-8142-348d96e8d8f7-attachment.jpg", "type": "image/jpg"}], "start": 1595247455125, "stop": 1595247455126, "uuid": "2911e41e-950b-44fa-806c-4b6b3d457d76", "historyId": "cd22902d1798006d4ef5a0dce54694d0", "testCaseId": "7d9e3fdce11b68b9b474186cc9dbe3b2", "fullName": "Python_Attach#test_attach_photo", "labels": [{"name": "suite", "value": "Python_Attach"}, {"name": "host", "value": "DESKTOP-8222JDF"}, {"name": "thread", "value": "14648-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Python_Attach"}]}